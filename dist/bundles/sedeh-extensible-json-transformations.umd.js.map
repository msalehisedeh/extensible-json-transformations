{"version":3,"file":"sedeh-extensible-json-transformations.umd.js","sources":["../../node_modules/tslib/tslib.es6.js","ng://@sedeh/extensible-json-transformations/src/app/extensible-json-transformations/components/inquirer.ts","ng://@sedeh/extensible-json-transformations/src/app/extensible-json-transformations/components/transformations.ts","ng://@sedeh/extensible-json-transformations/src/app/extensible-json-transformations/components/extensible-json-transformations.ts","ng://@sedeh/extensible-json-transformations/src/app/extensible-json-transformations/extensible-json-transformations.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\r\n * Intentionally avoiding use of map call on list to reduce the call stack numbers.\r\n * On large scale JSON, call stack becomes a problem to be avoided.\r\n */\r\n\r\n\r\nexport interface Template {\r\n    name: string,\r\n    match?: string,\r\n    value?: string,\r\n    context: string,\r\n    inPool?: string,\r\n    style: any\r\n}\r\n\r\nexport interface QueryOperation {\r\n    name: string,\r\n    args?: QueryOperation[]\r\n}\r\n\r\nexport class JXPath {\r\n    private path;\r\n    constructor(jpath){\r\n        this.path = jpath.split(\".\");\r\n    }\r\n    fromLast() {\r\n        return new JXPath(this.path[this.path.length - 1]);\r\n    }\r\n    nodeOf(node) {\r\n        return this._nodeOf(node, this.path);\r\n    }\r\n    private _nodeOf(node, path: string[]) {\r\n        let pItem = node;\r\n        for (let i = 0; i < this.path.length; i++) {\r\n            if (pItem instanceof Array) {\r\n                const list = [];\r\n                for (let q = 0; q < this.path.length; q++) {\r\n                    const item = pItem[q];\r\n                    const x = this._nodeOf(item[path[i]], path.slice(i+1,path.length));\r\n                    if (x && x !== null) {\r\n                        list.push(x);\r\n                    }\r\n                };\r\n                if (list.length) {\r\n                    pItem = list;\r\n                }\r\n                break;\r\n            } else {\r\n                pItem = pItem ? pItem[path[i]] : pItem;\r\n            }\r\n        }\r\n        return pItem;\r\n    }\r\n    valueOf(node) {\r\n        return this._valueOf(node, this.path);\r\n    }\r\n    private _valueOf(node, path: string[]) {\r\n        let pItem = node;\r\n        for (let i = 0; i < this.path.length; i++) {\r\n            if (pItem instanceof Array) {\r\n              const list = [];\r\n              for (let q = 0; q < this.path.length; q++) {\r\n                const item = pItem[q];\r\n                list.push(this._valueOf(item[path[i]], path.slice(i+1,path.length)));\r\n              }\r\n              pItem = list;\r\n              break;\r\n            } else if (path.length) {\r\n                pItem = pItem ? pItem[path[i]] : pItem;\r\n            } else {\r\n                 pItem = pItem;\r\n            }\r\n        }\r\n        return pItem;\r\n    }\r\n}\r\n\r\nexport class Inquirer  {\r\n\r\n    private supportedMethods = {};\r\n    private templates = {};\r\n    private rootNode;\r\n    private contextNode; // should be set before any call is made... this is to avoid call stack overflow in extremelt large JSON\r\n    private globalPool = {};\r\n    private pathPool = {};// to avoid stackoverflow... and perform faster\r\n\r\n    constructor() {\r\n        this.addSupportingMethod(\"valueOf\", this.valueOf);\r\n        this.addSupportingMethod(\"each\", this.each);\r\n        this.addSupportingMethod(\"split\", this.split);\r\n        this.addSupportingMethod(\"concat\", this.concatenate);\r\n        this.addSupportingMethod(\"enlist\", this.enlist);\r\n        this.addSupportingMethod(\"join\", this.join);\r\n        this.addSupportingMethod(\"filter\", this.filter);\r\n        this.addSupportingMethod(\"select\", this.select);\r\n        this.addSupportingMethod(\"style\", this.style);\r\n        this.addSupportingMethod(\"match\", this.match);\r\n        this.addSupportingMethod(\"apply\", this.apply);\r\n        this.addSupportingMethod(\"filter\", this.filter);\r\n        this.addSupportingMethod(\"select\", this.select);\r\n        this.addSupportingMethod(\"offPool\", this.offPool);\r\n    }\r\n\r\n    private jXPathFor(path: string) {\r\n        let p:JXPath = this.pathPool[path];\r\n        if (!p) {\r\n            p = new JXPath(path);\r\n            this.pathPool[path] = p;\r\n        }\r\n        return p;\r\n    }\r\n\r\n    setRootNode(node:any) {\r\n        this.rootNode = this.nodeList(node);\r\n        this.initPools(this.templates);\r\n    }\r\n    setContextNode(node) {\r\n        this.contextNode = node;\r\n    }\r\n    templateForName(name) {\r\n        return this.templates[name];\r\n    }\r\n    // if node is null, root node will be used.\r\n    nodeList(node) {\r\n        const item = node === null ? this.rootNode : node;\r\n        let list;\r\n\r\n        if (item instanceof Array) {\r\n            list = item;\r\n         } else {\r\n             const x = Object.keys(item);\r\n             list = [];\r\n             for (let t = 0; t < x.length; t++) {\r\n                const xItem = x[t];\r\n                if (item[xItem] instanceof Array) {\r\n                    list = list.concat(item[xItem]);\r\n                } else {\r\n                    list.push(item[xItem]);\r\n                }\r\n            }\r\n         }\r\n         return list;\r\n    }\r\n\r\n    // performs query of nested function calls on the given node.\r\n    query(command:string, node) {\r\n        const mothods =this.toQueryOperation(command);\r\n\r\n        if (node instanceof Array) {\r\n            let list = [];\r\n            for (let q = 0; q < node.length; q++) {\r\n                const nodeItem = node[q];\r\n                list = list.concat(this.invoke(mothods, nodeItem))\r\n            };\r\n            return list;\r\n        }\r\n        return this.invoke(mothods, node);\r\n    }\r\n\r\n    // performs query with given list of query opertations\r\n    invoke(operation:QueryOperation, node) {\r\n        let list:any = [];\r\n        if ((typeof node === \"object\") && (node instanceof Array) && node.length === 0) {\r\n            list = [];\r\n        } else if (typeof operation === 'object') {\r\n            const f = this.supportedMethods[operation.name];\r\n            if (f) {\r\n                if (operation.args instanceof Array) {\r\n                    for (let a = 0; a < operation.args.length; a++) {\r\n                        const arg = operation.args[a]\r\n                        if (arg.name) {\r\n                            list.push(this.invoke(arg, node));\r\n                        } else {\r\n                            list.push(arg);\r\n                        }\r\n                    }\r\n                } else {\r\n                    list.push(operation.args);\r\n                }\r\n                // list.push(node);\r\n                const oldContext = this.contextNode;\r\n                this.contextNode = node;\r\n                list = f.apply(this, list);\r\n                this.contextNode = oldContext;\r\n            } else {\r\n                list = operation.name;\r\n            }\r\n        } else {\r\n            list = operation;\r\n        }\r\n        return list;\r\n    }\r\n\r\n    // concatenate(a, b, c): joins arguments into a string\r\n    // join args[0,1,2]\r\n    concatenate(...args) {\r\n        const left = args[0];\r\n        const delim= args[1];\r\n        const right= args[2];\r\n        const result = [];\r\n\r\n        if (left instanceof Array) {\r\n            if (right instanceof Array) {\r\n                if (left.length > right.length) {\r\n                    for (let q = 0; q < left.length; q++) {\r\n                        result.push( left[q] + delim + (right.length > q ? right[q] : \"\"));\r\n                    };\r\n                } else {\r\n                    for (let q = 0; q < right.length; q++) {\r\n                        result.push( (left.length > q ? left[q] : \"\") + delim + right[q]);\r\n                    };\r\n                }\r\n            } else {\r\n                for (let q = 0; q < left.length; q++) {\r\n                    result.push( left[q] + delim + right);\r\n                };\r\n            }\r\n        } else {\r\n            if (right instanceof Array) {\r\n                for (let q = 0; q < right.length; q++) {\r\n                    result.push( left + delim + right[q]);\r\n                };\r\n            } else {\r\n                result.push(left + delim + right);\r\n            }\r\n        }\r\n        return result.length > 1 ? result : result[0];\r\n    }\r\n    // split(item,','): splits value into a list\r\n    // split args[0] with args[1]\r\n    split(...args) {\r\n        return args[0] ? args[0].split(args[1]) : [];\r\n    }\r\n    // valueOf(path):  evaluates value of argument path\r\n    // path = args[0], node to evaluate = args[1]\r\n    valueOf(...args) {\r\n        const jpath = this.jXPathFor(args[0]);\r\n        return jpath.valueOf(this.contextNode);\r\n    }\r\n    // each(list,method): For each item in list, invode the callback method\r\n    // each item of args[0] execute function of args[1]\r\n    each(...args) {\r\n        const list = [];\r\n        const method = {name: \"valueOf\", args: args[1]};\r\n        \r\n        for (let q = 0; q < args[0].length; q++) {\r\n            const node = args[0][q];\r\n            list.push(this.invoke(method, node));\r\n        };\r\n        return list;\r\n    }\r\n    // enlist(...): insert argument values into a list\r\n    enlist(...args) {\r\n        const list = [];\r\n        args.map( (item) => {\r\n            list.push(item); // make sure last two item are not node and template\r\n        })\r\n        return list;\r\n    }\r\n    // join(array,','): joins items of the list into a string\r\n    join(...args) {\r\n        return args[0].length > 1 ? args[0].join(args[1]) : args[0];\r\n    }\r\n    // apply(template,path,array): apply the template in root context for each value \r\n    // that matches the given path. args[0] name to apply\r\n    apply(...args) {\r\n        const path = this.jXPathFor(args[1]);\r\n        const path2= path.fromLast();\r\n        const values = args[2];\r\n        let list = [];\r\n\r\n        for (let c = 0; c < this.rootNode.length; c++) {\r\n            const node = this.rootNode[c];\r\n            const value = path.nodeOf(node);\r\n            if (value instanceof Array) {\r\n                for (let d = 0; d < value.length; d++) {\r\n                    const v = value[d];\r\n                    const x = path2.valueOf(v);\r\n                    if (this.evaluateOperation(x,\"=\", values)) {\r\n                        list.push(v);\r\n                    }\r\n                }\r\n            } else {\r\n                const x = path2.valueOf(node);\r\n                if (this.evaluateOperation(x,\"=\", values)) {\r\n                    list.push(node);\r\n                }\r\n            }\r\n        };\r\n        if (list.length) {\r\n            list = this.style(args[0], list);\r\n        }\r\n        return list;\r\n    }\r\n    // match(template,path,operation,values): , node args[4]\r\n    // for value of target in given template nodes, evaluate operation for given value(s). \r\n    match(...args) {\r\n        const template:Template = this.templateForName(args[0]);\r\n\r\n        if (!template) {\r\n            throw {\r\n                message: \"Missing Template definition for '\" + args[0] + \"'.\",\r\n                stack: new Error().stack\r\n            };\r\n        }\r\n        const path = this.jXPathFor(args[1]);\r\n        const path2= path.fromLast();\r\n        const operation = args[2];\r\n        const values = args[3];\r\n        const nodes = this.templateNodes(template, this.contextNode)\r\n        const list = [];\r\n        if (nodes instanceof Array) {\r\n            for (let c = 0; c < nodes.length; c++) {\r\n                const node = nodes[c];\r\n                const value = path.nodeOf(node);\r\n                if (value instanceof Array) {\r\n                    for (let d = 0; d < value.length; d++) {\r\n                        const v = value[d];\r\n                        const x = path2.valueOf(v);\r\n                        if (this.evaluateOperation(x,operation, values)) {\r\n                            list.push(v);\r\n                        }\r\n                    }\r\n                } else {\r\n                    const x = path2.valueOf(node);\r\n                    if (this.evaluateOperation(x,operation, values)) {\r\n                        list.push(node);\r\n                    }\r\n                }\r\n            };\r\n        } else {\r\n            const value = path.nodeOf(nodes);\r\n            if (value instanceof Array) {\r\n                for (let d = 0; d < value.length; d++) {\r\n                    const v = value[d];\r\n                    const x = path2.valueOf(v);\r\n                    if (this.evaluateOperation(x,operation, values)) {\r\n                        list.push(v);\r\n                    }\r\n                }\r\n            } else {\r\n                const x = path2.valueOf(nodes);\r\n                if (this.evaluateOperation(x,operation, values)) {\r\n                    list.push(nodes);\r\n                }\r\n            }\r\n        \r\n        }\r\n       return list;\r\n    }\r\n    // filter(path,operation,value): for value of target in current context, \r\n    // evaluate operation for given value(s). Supported operations are `=,<,>,in,!`. 'in' for list values mean contains and for string value means indexOf. '!' means not equal or not in.\r\n    filter(...args) {\r\n        const path = this.jXPathFor(args[0]);\r\n        const operation = args[1];\r\n        const values = args[2];\r\n        const list = [];\r\n        for (let a = 0; a < this.contextNode.length; a++) {\r\n            const node = this.contextNode[a];\r\n            const value = path.valueOf(node);\r\n            if (value instanceof Array) {\r\n                for (let d = 0; d < value.length; d++) {\r\n                    const v = value[d];\r\n                    if (this.evaluateOperation(v,operation, values)) {\r\n                        list.push(node);\r\n                    }\r\n                }\r\n            } else {\r\n                if (this.evaluateOperation(value,operation, values)) {\r\n                    list.push(node);\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    // select(path): select the nodes with given path in current context\r\n    select(...args) {\r\n        const path = this.jXPathFor(args[0]);\r\n        let list = [];\r\n        if (this.contextNode instanceof Array) {\r\n            for (let d = 0; d < this.contextNode.length; d++) {\r\n                const node = this.contextNode[d];\r\n                const value = path.nodeOf(node);\r\n                if (value && value.length) {\r\n                    list.push(node);\r\n                }\r\n            }\r\n        } else {\r\n            const value = path.nodeOf(this.contextNode);\r\n            if (value && value.length) {\r\n                if (value instanceof Array) {\r\n                    list = value;\r\n                } else {\r\n                    list.push(value);\r\n                }\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n    // style(template, array): apply the given template for the given array\r\n    style(...args) {\r\n        const template:Template = this.templateForName(args[0]);\r\n\r\n        if (!template) {\r\n            throw {\r\n                message: \"Missing Template definition for '\" + args[0] + \"'.\",\r\n                stack: new Error().stack\r\n            };\r\n        }\r\n\r\n        const result = [];\r\n        const attrs = Object.keys(template.style);\r\n    \r\n        if (args[1] instanceof Array) {\r\n            for (let a = 0; a < args[1].length; a++) {\r\n                const item = args[1][a];\r\n                const node = {};\r\n                for (let d = 0; d < attrs.length; d++) {\r\n                    const attr = attrs[d];\r\n                    node[attr] = this.invoke(template.style[attr], item);\r\n                }\r\n                result.push(node);\r\n            }\r\n        } else {\r\n            const node = {};\r\n            for (let d = 0; d < attrs.length; d++) {\r\n                const attr = attrs[d];\r\n                node[attr] = this.invoke(template.style[attr], args[1]);\r\n            }\r\n            result.push(node);\r\n        }\r\n        return result;\r\n    }\r\n    addSupportingMethod(name, method) {\r\n        this.supportedMethods[name] = method;\r\n    }\r\n     private removeQuotes(str) {\r\n        return (str.length && str[0] === '\\'' && str[str.length-1] === '\\'') ? str.substring(1,str.length-1) : str;\r\n    }\r\n    toQueryOperation(methods) {\r\n        const operations = methods.replace(/([^']+)|('[^']+')/g, function($0, $1, $2) {\r\n            if ($1) {\r\n                return $1.replace(/\\s/g, '');\r\n            } else {\r\n                return $2; \r\n            } \r\n        }).replace(/'[^']+'/g, function (match) {\r\n            return match.replace(/,/g, '~');\r\n        });\r\n        return this.toFunctions(operations);\r\n    }\r\n    private toFunctions(item){\r\n        // if item = join(enlist(valueOf(address.street),valueOf(address.city),valueOf(address.zipcode)),',')\r\n        let i = -1;\r\n        let j = -1;\r\n        let k = -1;\r\n        let c = 0;\r\n        let json: any = {};\r\n        for (let cindex = 0; cindex < item.length; cindex++) {\r\n            if (item[cindex] === '(') {\r\n                if (c === 0) {\r\n                    i = cindex;\r\n                }\r\n                c++;\r\n            } else if (item[cindex] === ')') {\r\n                c--;\r\n                if (c === 0){\r\n                    const isArry = (json instanceof Array);\r\n\r\n                    j = cindex;\r\n                    if (!isArry && (j === (item.length - 1))) {\r\n                        json[\"name\"] = item.substring(0, i);\r\n                        json[\"args\"] = this.toFunctions(item.substring(i+1,j));\r\n                    } else {\r\n                        if (!isArry) {\r\n                            json = [];\r\n                        }\r\n                        json.push({ \r\n                            name: item.substring(k+1, i), \r\n                            args: this.toFunctions(item.substring(i+1,j)) \r\n                        });\r\n                    }\r\n                }\r\n            } else if (item[cindex] === ',') {\r\n                if (c === 0 && (cindex-1 !== k)) {\r\n                    const isArry = (json instanceof Array);\r\n\r\n                    if (k < 0) {\r\n                        if (i < 0) {\r\n                            if (!isArry) {\r\n                                json = [];\r\n                            }\r\n                            json.push({\r\n                                name: this.removeQuotes(item.substring(k+1, cindex).replace(/~/g, ',')),\r\n                                args: []\r\n                            });\r\n                        }\r\n                        k = cindex;\r\n                    } else {\r\n                        const x = this.removeQuotes(item.substring(k+1, cindex).replace(/~/g, ','));\r\n                        if (x.indexOf('(') < 0) {\r\n                            if (json instanceof Array) {\r\n                                json.push(x);\r\n                            } else {\r\n                                json.args.push(x);\r\n                            }\r\n                        }\r\n                        k = cindex;\r\n                    }\r\n                } else if (c === 0 && (cindex-1 === k)) {\r\n                    k = cindex;\r\n                }\r\n            }\r\n        }\r\n        if (i >= 0 && j < 0) {\r\n            throw {\r\n                message: \"incorrect method call declaration. Missing ')'\",\r\n                stack: new Error().stack\r\n            };\r\n        } else if (i<0 && j>0) {\r\n            throw {\r\n                message: \"incorrect method call declaration. Missing '('\",\r\n                stack: new Error().stack\r\n            };\r\n        }else if (i < 0 && j < 0 && k < 0) {\r\n            return item;\r\n        }else if (c === 0 && k > j) {\r\n            if (json instanceof Array) {\r\n                json.push(this.removeQuotes(item.substring(k+1, item.length).replace(/~/g, ',')));\r\n            } else {\r\n                json.args.push(this.removeQuotes(item.substring(k+1, item.length).replace(/~/g, ',')));\r\n            }\r\n        }\r\n        return json;\r\n    }\r\n\r\n    templateNodes(template:Template, nodes) {\r\n        let list = [];\r\n        let nodeList = nodes;\r\n\r\n        if (template.context === \"root\") {\r\n            if (!this.rootNode) {\r\n                throw {\r\n                    message:\"Unable to find root node to perform operation.\",\r\n                    stack: new Error().stack\r\n                };\r\n            }\r\n            nodeList = this.nodeList(this.rootNode);\r\n        }    \r\n        if (template.match && template.match.length) {\r\n            const path = this.jXPathFor(template.match);\r\n\r\n            for (let z = 0; z < nodeList.length; z++) {\r\n                const node = nodeList[z];\r\n                if (path.valueOf(node) === template.value) {\r\n                    list.push(node);\r\n                }\r\n            }       \r\n        } else if (nodes) {\r\n            list = nodeList;\r\n        }\r\n        return list;\r\n    }\r\n    // Supported operations are `=,<,>,in,!`. 'in' for list values mean contains and\r\n    // for string value means indexOf. '!' means not equal or not in.\r\n    private evaluateOperation(left, operation, right) {\r\n        let result = false;\r\n        if (right instanceof Array) {\r\n            if (operation === \"=\") {\r\n                for (let i=0;i<right.length;i++){\r\n                    if (left == right[i]){\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (operation === \"in\") {\r\n                for (let i=0;i<right.length;i++){\r\n                    if (right[i].indexOf(left) >= 0){\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                };\r\n            } else if (operation === \"!\") {\r\n                let f = false;\r\n                for (let i=0;i<right.length;i++){\r\n                    if (left == right[i]){\r\n                        f = true;\r\n                        break;\r\n                    }\r\n                };\r\n                result = !f;\r\n            }\r\n\r\n        } else {\r\n            if (operation === \"=\") {\r\n                result = (left == right);\r\n            } else if (operation === \"in\") {\r\n                result = (right.indexOf(left) >= 0);\r\n            } else if (operation === \"!\") {\r\n                result = (left !== right);\r\n            } else if (operation === \">\") {\r\n                result = (parseFloat(left) > parseFloat(right));\r\n            } else if (operation === \"<\") {\r\n                result = (parseFloat(left) < parseFloat(right));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // offPool(template,key): Will use the given template pool to pick up item(s) with given key(s)\r\n    private offPool(...args) {\r\n        const list = [];\r\n        const pool = this.globalPool[args[0]];\r\n        const keys = args[1];\r\n        if (!pool) {\r\n            throw {\r\n                message: \"Attempting to access pool '\" + args[0] + \"' that is not created.\",\r\n                stack: new Error().stack\r\n            };\r\n        }\r\n        if (keys instanceof Array){\r\n            for (let z=0; z < keys.length; z++) {\r\n                const key = keys[z];\r\n                const node = pool[key];\r\n                if (node) {\r\n                    list.push(node);\r\n                } else {\r\n                    // should we throw here?\r\n                }\r\n            }\r\n        } else {\r\n            const node = pool[keys];\r\n            if (node) {\r\n                list.push(node);\r\n            }\r\n        }\r\n        return list;\r\n    }\r\n   \r\n    initTemplates(list) {\r\n        this.templates = {};\r\n        for (let i=0; i < list.length; i++){\r\n            const template: any= list[i];\r\n            const styles = Object.keys(template.style)\r\n            for (let j = 0; j < styles.length; j++) {\r\n                const key = styles[j];\r\n                const method = template.style[key];\r\n                if (typeof method === \"string\") {\r\n                    template.style[key] = this.toQueryOperation(method);\r\n                }\r\n            }\r\n            this.templates[template.name] = template;\r\n        }\r\n    }\r\n    initPools(templates) {\r\n        const list = Object.keys(templates);\r\n        if (list.length === 0) {\r\n            throw {\r\n                message: \"Missing Template definitions.\",\r\n                stack: new Error().stack\r\n            };\r\n        }\r\n        if (!this.rootNode) {\r\n            throw {\r\n                message: \"Unable to find root node to perform operation.\",\r\n                stack: new Error().stack\r\n            };\r\n        }\r\n\r\n        this.globalPool = {};\r\n\r\n        for (let i=0; i < list.length; i++){\r\n            const template: string = list[i];\r\n            const t = this.templateForName(template);\r\n            if (t.inPool) {\r\n                const pool = {};\r\n                const path = this.jXPathFor(t.inPool);\r\n                const match= t.match;\r\n                const nodes= this.rootNode;\r\n                if (match && t.value) {\r\n                    const mpath = this.jXPathFor(match);\r\n                    \r\n                    for (let k=0; k < nodes.length; k++){\r\n                        const v = mpath.valueOf(nodes[k]);\r\n                        if (v === t.value) {\r\n                            pool[path.valueOf(nodes[k])] = nodes[k];\r\n                        }\r\n                    }\r\n                } else {\r\n                    for (let k=0; k < nodes.length; k++){\r\n                        pool[path.valueOf(nodes[k])] = nodes[k];\r\n                    }\r\n                }\r\n                this.globalPool[t.name] = pool;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { JXPath, Inquirer, Template } from './inquirer';\r\n/*\r\n * tool to display result of a search on set of points of interests on objects.\r\n */\r\n\r\nexport interface Transformations {\r\n    name: string,\r\n    importUrls?:string[],\r\n    rootTemplate: string,\r\n    onResult?: string,\r\n    templates: Template[]\r\n}\r\n\r\nexport class Styler  {\r\n\r\n    private transformations: Transformations;\r\n    private inquirer:Inquirer;\r\n\r\n    constructor(transformations:Transformations) {\r\n        this.inquirer = new Inquirer();\r\n        this.transformations = transformations;\r\n        this.inquirer.initTemplates(this.transformations.templates);\r\n    }\r\n\r\n    public changeRootNode(node:any) {\r\n        this.inquirer.setRootNode(node);\r\n    }\r\n\r\n    public transform() {\r\n        let result = [];\r\n        const template:Template = this.inquirer.templateForName(this.transformations.rootTemplate);\r\n        \r\n        if (template) {\r\n            const attrs = Object.keys(template.style);\r\n            const nodeList = this.inquirer.templateNodes(template, this.inquirer.nodeList(null));\r\n    \r\n            for(let i = 0; i < nodeList.length; i++) {\r\n                const currentNode = nodeList[i];\r\n                const resultingNode = {};\r\n                for( let j = 0; j < attrs.length; j++) {\r\n                    const attr = attrs[j];\r\n                    resultingNode[attr] = this.inquirer.invoke(template.style[attr], currentNode);\r\n                };\r\n                result.push(resultingNode);\r\n            };\r\n        }\r\n        if(this.transformations.onResult && this.transformations.onResult.length) {\r\n            const functions = this.inquirer.toQueryOperation(this.transformations.onResult);\r\n            result = this.inquirer.invoke(functions, result);\r\n        }\r\n        return result;\r\n    }\r\n}\r\n","/*\r\n * tool to display result of a search on set of points of interests on objects.\r\n */\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  OnChanges,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { Styler, Transformations } from './transformations';\r\n\r\n@Component({\r\n  selector: 'xjslt',\r\n  template: ``,\r\n  styles: [],\r\n})\r\nexport class XjsltComponent implements OnInit, OnChanges  {\r\n  \r\n  private styler;\r\n\r\n  @Input(\"node\")\r\n  node = {};\r\n\r\n  @Input(\"transformations\")\r\n  transformations: Transformations;\r\n\r\n  @Output(\"ontransformation\")\r\n  ontransformation = new EventEmitter();\r\n\r\n  @Output(\"onerror\")\r\n  onerror = new EventEmitter();\r\n\r\n  ngOnInit() {\r\n    if (this.node && this.transformations) {\r\n      if(!this.styler) {\r\n        this.styler = new Styler(this.transformations);\r\n      }\r\n      this.styler.changeRootNode(this.node);\r\n      try {\r\n        this.ontransformation.emit(this.styler.transform());\r\n      } catch(e) {\r\n        console.log(e)\r\n        this.onerror.emit(e);\r\n      }\r\n    }\r\n  }\r\n  ngOnChanges(chages) {\r\n    if (chages.transformations) {\r\n      this.styler = undefined;\r\n      setTimeout(this.ngOnInit.bind(this), 333);\r\n    } else if (chages.node) {\r\n      setTimeout(this.ngOnInit.bind(this), 333);\r\n    }\r\n  }\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { XjsltComponent } from './components/extensible-json-transformations';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n    XjsltComponent,\r\n  ],\r\n  exports: [\r\n    XjsltComponent,\r\n  ],\r\n  entryComponents: [\r\n    XjsltComponent\r\n  ],\r\n  providers: [\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\n\r\nexport class XjsltModule {}\r\n"],"names":["EventEmitter","tslib_1.__decorate","Input","Output","Component","NgModule","CommonModule","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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"}